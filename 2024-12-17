import pandas as pd
import random

# Step 1: 데이터 로드 및 전처리
def load_and_preprocess_data(file_path):
    try:
        cocktail_data = pd.read_csv(file_path)
    except FileNotFoundError:
        print("데이터 파일을 찾을 수 없습니다. 파일 경로를 확인해주세요.")
        return None

    # 알코올 강도 분류 함수
    def classify_alcohol_level(alcohol_type):
        weak_drinks = ['Beer', 'Cider', 'Wine', 'Champagne', 'Prosecco']
        medium_drinks = ['Sweet Liqueur', 'Creamy Liqueur', 'Triple Sec', 'Vermouth', 'Schnapps', 'Port']
        strong_drinks = ['Vodka', 'Rum', 'Gin', 'Whisky', 'Tequila', 'Absinthe', 'Brandy', 'Sambuca', 'Cachaca', 'Pisco', 'Ouzo']

        if alcohol_type in weak_drinks:
            return '약한'
        elif alcohol_type in medium_drinks:
            return '중간'
        elif alcohol_type in strong_drinks:
            return '강한'
        return None

    # 알코올 강도 열 생성
    cocktail_data['Alcohol_level'] = cocktail_data['Alc_type'].apply(classify_alcohol_level)

    # 칵테일 이름과 재료를 기준으로 중복 제거
    cocktail_data = cocktail_data.groupby('strDrink').agg({
        'strCategory': 'first',
        'strGlass': 'first',
        'strIngredients': lambda x: ', '.join(x.dropna().astype(str)),
        'Alc_type': 'first',
        'Basic_taste': lambda x: ', '.join(x.dropna().astype(str)),
        'strInstructions': 'first',
        'Alcohol_level': 'first'
    }).reset_index()

    return cocktail_data

# 한글-영어 맛 변환 사전
taste_translation_dict = {
    '신맛': 'sour',
    '단맛': 'sweet',
    '크리미함': 'cream  ',
    '쓴맛': 'bitter',
    '맑고 담백한 맛': 'clean',
    '민트': 'mint',
    '계란맛': 'egg',
    '짠맛': 'salty',
    '매운맛': 'spicy'
}

# Step 2: 사용자 입력 받기 (맛 우선)
def get_taste_preferences(cocktail_data):
    print("맛을 순서대로 입력하세요. 예: 신맛, 단맛, 크리미함, 쓴맛, 맑고 담백한 맛, 민트, 계란맛, 짠맛, 매운맛. (입력을 종료하려면 '완료' 입력)")
    valid_tastes = list(taste_translation_dict.keys())
    taste_preferences = []

    while True:
        taste = input("맛: ").strip()
        if taste.lower() == '완료':
            break
        if taste in valid_tastes:
            translated_taste = taste_translation_dict[taste]
            taste_preferences.append(translated_taste)
        else:
            print(f"'{taste}'은(는) 잘못된 입력입니다. 가능한 맛: {', '.join(valid_tastes)}")

    # 맛 필터링
    remaining_cocktails = cocktail_data.copy()
    for taste in taste_preferences[:]:  # 입력된 맛 리스트 순회
        filtered_cocktails = remaining_cocktails[remaining_cocktails['Basic_taste'].str.contains(taste, na=False)]
        if filtered_cocktails.empty:
            print(f"'{taste}' 맛을 만족하는 칵테일이 없어 제외합니다.")
            taste_preferences.remove(taste)
        else:
            remaining_cocktails = filtered_cocktails

    return taste_preferences, remaining_cocktails

# Step 3: 추가 사용자 입력 받기 (알코올 도수 및 분위기)
def get_additional_preferences():
    while True:
        alcohol_preference = input("알코올 정도를 선택하세요: 약한, 중간, 강한 (잘모르겠으면 '잘모르겠음' 입력): ").strip()
        if alcohol_preference in ['약한', '중간', '강한', '잘모르겠음']:
            break
        print("잘못된 입력입니다. 다시 입력해주세요.")

    while True:
        mood_preference = input("분위기를 선택하세요: 여유로운, 파티, 고급스러운 (잘모르겠으면 '잘모르겠음' 입력): ").strip()
        if mood_preference in ['여유로운', '파티', '고급스러운', '잘모르겠음']:
            break
        print("잘못된 입력입니다. 다시 입력해주세요.")

    return alcohol_preference, mood_preference

# Step 4: 데이터 필터링
def filter_cocktails(cocktail_data, alcohol_preference='잘모르겠음', mood_preference='잘모르겠음'):
    debug_info = {}
    filtered_cocktails = cocktail_data.copy()

    # 분위기 필터링
    if mood_preference != '잘모르겠음':
        if mood_preference == '여유로운':
            categories = ['Milk / Float / Shake', 'Ordinary Drink', 'Coffee / Tea', 'Soft Drink / Soda']
            glasses = ['Highball glass', 'Coffee mug', 'Mason jar', 'Beer mug']
        elif mood_preference == '파티':
            categories = ['Cocktail', 'Shot', 'Punch / Party Drink']
            glasses = ['Shot glass', 'Champagne flute', 'Hurricane glass', 'Collins glass']
        elif mood_preference == '고급스러운':
            categories = ['Cocktail', 'Other/Unknown']
            glasses = ['Martini Glass', 'Old-fashioned glass', 'Brandy snifter', 'White wine glass', 'Copper Mug']
        else:
            categories, glasses = [], []

        filtered_cocktails = filtered_cocktails[
            filtered_cocktails['strCategory'].isin(categories) & filtered_cocktails['strGlass'].isin(glasses)
        ]
        debug_info['분위기 필터링 후'] = len(filtered_cocktails)

    # 알코올 도수 필터링
    if alcohol_preference != '잘모르겠음':
        filtered_cocktails = filtered_cocktails[filtered_cocktails['Alcohol_level'] == alcohol_preference]
        debug_info['알코올 필터링 후'] = len(filtered_cocktails)

    for step, count in debug_info.items():
        print(f"{step}: {count}개의 데이터가 남았습니다.")

    return filtered_cocktails

# Step 5: 추천 결과 출력
def recommend_cocktails(filtered_cocktails):
    if filtered_cocktails.empty:
        print("조건에 맞는 칵테일이 없습니다. 조건을 변경해주세요!")
        return

    print("\n추천 칵테일 리스트:")
    recommendations = filtered_cocktails.sample(n=min(5, len(filtered_cocktails)))
    for _, row in recommendations.iterrows():
        print(f"- {row['strDrink']}: {row['strIngredients']} ({row['strGlass']})")
        print(f"  만드는 방법: {row['strInstructions']}\n")

# Main
if __name__ == "__main__":
    # 데이터 로드
    data_file_path = r"cocktails.csv"
    cocktail_data = load_and_preprocess_data(data_file_path)
    if cocktail_data is None:
        exit()

    # 맛 입력 및 필터링
    taste_preferences, filtered_cocktails = get_taste_preferences(cocktail_data)

    # 추가 조건 입력
    alcohol_preference, mood_preference = get_additional_preferences()

    # 추가 조건에 따른 필터링
    filtered_cocktails = filter_cocktails(filtered_cocktails, alcohol_preference, mood_preference)

    # 추천 출력
    recommend_cocktails(filtered_cocktails)
